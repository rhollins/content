<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>externaldns on Rafal Hollins</title><link>https://rhollins.github.io/content/tags/externaldns/</link><description>Recent content in externaldns on Rafal Hollins</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Nov 2022 18:31:41 +0000</lastBuildDate><atom:link href="https://rhollins.github.io/content/tags/externaldns/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuring Conditional Forwarding from On-Premise Domain Controller DNS with Azure DNS Private Resolver and AKS</title><link>https://rhollins.github.io/content/posts/configuring-conditional-forwarding-from-on-premise-domain-controller-dns-with-azure-dns-private-resolver-and-aks/</link><pubDate>Sun, 06 Nov 2022 18:31:41 +0000</pubDate><guid>https://rhollins.github.io/content/posts/configuring-conditional-forwarding-from-on-premise-domain-controller-dns-with-azure-dns-private-resolver-and-aks/</guid><description>In this article, we will see how to resolve names of the K8s services running in AKS (Azure Kubernetes Service) from an on-premise desktop or server which is using DNS server running as part Active Directory Domain Controller. The assumption is that the company has a private connection with Azure using offerings like Expressroute.
We will also make use of Azure DNS Private Resolver which is quite a new PAAS solution and also allow us to use Conditional Forwarding from on-premise DC where before we would have to use some other target DNS server like for example custom CoreDNS deployed with etcd as backend in K8s which would be propagated by External DNS.</description></item></channel></rss>