<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>azure on Rafal Hollins</title><link>https://rhollins.github.io/content/tags/azure/</link><description>Recent content in azure on Rafal Hollins</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 03 Dec 2022 18:31:41 +0000</lastBuildDate><atom:link href="https://rhollins.github.io/content/tags/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>Jenkins on Azure Kubernetes Cluster (AKS) - How to recover Jenkins controller from Azure availability zone or region failure</title><link>https://rhollins.github.io/content/posts/jenkins-on-azure-kubernetes-cluster-aks-how-to-recover-jenkins-controller-from-azure-availability-zone-or-region-failure/</link><pubDate>Sat, 03 Dec 2022 18:31:41 +0000</pubDate><guid>https://rhollins.github.io/content/posts/jenkins-on-azure-kubernetes-cluster-aks-how-to-recover-jenkins-controller-from-azure-availability-zone-or-region-failure/</guid><description>This is first article from the series Jenkins on Azure Kubernetes Cluster (AKS):
Jenkins on Azure Kubernetes Cluster (AKS) - How to recover Jenkins controller from Azure availability zone or region failure
Jenkins on Azure Kubernetes Cluster (AKS) - How to build container images with BuildKit, Jib, Kaniko and use Azure Files NFS, Azure Container Registry (ACR) and Azure Blob storage for caching
Table of contents
Setting up our environment Create VNet and AKS with NGINX Ingress Controller Create Managed Disk and Configure Jenkins Storage Deploy and configure Jenkins Test Availability Zone failover Test Regional Failover Final Thoughts Jenkins is still a very popular CI/CD tool used by a lot of companies if you want to run it in Azure there are some usual options to choose from including stand alone VM&amp;rsquo;s or Azure Virtual Machine Scale Sets, but in this article, we will use AKS for both Jenkins controller and agents.</description></item><item><title>Configuring Conditional Forwarding from On-Premise Domain Controller DNS with Azure DNS Private Resolver and AKS</title><link>https://rhollins.github.io/content/posts/configuring-conditional-forwarding-from-on-premise-domain-controller-dns-with-azure-dns-private-resolver-and-aks/</link><pubDate>Sun, 06 Nov 2022 18:31:41 +0000</pubDate><guid>https://rhollins.github.io/content/posts/configuring-conditional-forwarding-from-on-premise-domain-controller-dns-with-azure-dns-private-resolver-and-aks/</guid><description>Table of contents
Create VNet Deploy AKS Create Azure private DNS zone Deploy NGINX ingress controller Deploy External DNS Deploy Sample Appplication Deploy and configure Azure DNS private resolver Configure conditional forwarding from DNS server Test if we can reach AKS service from on-premise Finall thoughts Aditional resources In this article, we will see how to resolve names of the K8s services running in AKS (Azure Kubernetes Service) from an on-premise desktop or server which is using DNS server running as part Active Directory Domain Controller.</description></item></channel></rss>